<!-- livebook:{"persist_outputs":true} -->

# Advent Of Code 21 - Day7

## Index & Initial vars

In one day, you can get 2 stars by  solving 2 puzzle.

Index

* [Puzzle 1](#the-treachery-of-whales-(puzzle-1/2))
* [Puzzle 2](#the-treachery-of-whales-(puzzle-2/2))

```elixir
input_puzzle_path = "./Projects/Elixir-Advent-of-Code/Puzzles/Day7/input.txt"
```

<!-- livebook:{"output":true} -->

```
"./Projects/Elixir-Advent-of-Code/Puzzles/Day7/input.txt"
```

## The Treachery of Whales (Puzzle 1/2)

A giant whale has decided your submarine is its next meal, and it's much faster than you are. There's nowhere to run! Suddenly, a swarm of crabs (in its own tiny submarine) zooms in to rescue you! They seem to be preparing to blast a hole in the ocean floor; **sensors indicate a massive underground cave** system just beyond where they're aiming!

```
-----------------------------------------------------------------------------------


            _,.-------._
   /\__/\  /            \
   \_  _/ /              \
     \ \_|           @ __|                               |_   
      \                \_                           _____|~ |____    
       \     ,__/       /                         (  --         ~~~~--_,
        ---------------                             ~~~~~~~~~~~~~~~~~~~'` 



                                                      ðŸ¦€     ðŸ¦€
                                                ---------     ---------
                                                         |    |   
                                                        /      \
                                             __________/        \___________

```

The crab submarines all need to be aligned before they'll have enough power to blast a large enough hole for your submarine to get through. However, it doesn't look like they'll be aligned before the whale catches you! Maybe you can help?

<!-- livebook:{"break_markdown":true} -->

Crab submarines can only move horizontally. You quickly make a list of the horizontal position of each crab (your puzzle input).

Crab submarines have limited fuel, so you need to find a way to make all of their horizontal positions match while requiring them to spend as little fuel as possible.

For example, consider the following horizontal positions:

`16,1,2,0,4,2,7,1,2,14`

This means there's a crab with horizontal position 16, a crab with horizontal position 1, and so on.

Each change of 1 step in horizontal position of a single crab costs 1 fuel. The least fuel is horizontal position 2:

* Move from 16 to 2: 14 fuel
* Move from 1 to 2: 1 fuel
* Move from 2 to 2: 0 fuel
* Move from 0 to 2: 2 fuel
* Move from 4 to 2: 2 fuel
* Move from 2 to 2: 0 fuel
* Move from 7 to 2: 5 fuel
* Move from 1 to 2: 1 fuel
* Move from 2 to 2: 0 fuel
* Move from 14 to 2: 12 fuel

This costs a total of 37 fuel. This is the cheapest possible outcome; more expensive outcomes include aligning at position 1 (41 fuel), position 3 (39 fuel), or position 10 (71 fuel).

Determine the horizontal position that the crabs can align to using the least fuel possible. How much fuel must they spend to align to that position?

```elixir
{:ok, file} = File.open(input_puzzle_path, [:read, :compressed])

input =
  file
  |> IO.read(:eof)
  |> String.replace(~r/\n/, "")
  |> String.split(",")
  |> Enum.map(&String.to_integer(&1))
  |> IO.inspect(label: "Real input")

input
|> Enum.frequencies()
|> Enum.map(fn {k, v} -> %{k => k * v} end)
|> Enum.sort(&(&1 >= &2))
|> IO.inspect(label: "\nAlign in 0")
```

<!-- livebook:{"output":true} -->

```
Real input: [1101, 1, 29, 67, 1102, 0, 1, 65, 1008, 65, 35, 66, 1005, 66, 28, 1, 67, 65, 20,
 4, 0, 1001, 65, 1, 65, 1106, 0, 8, 99, 35, 67, 101, 99, 105, 32, 110, 39, 101,
 115, 116, 32, 112, 97, 115, 32, 117, 110, 101, 32, 105, ...]

Align in 0: [
  %{1934 => 1934},
  %{1881 => 1881},
  %{1836 => 1836},
  %{1804 => 1804},
  %{1763 => 1763},
  %{1735 => 1735},
  %{1704 => 1704},
  %{1699 => 1699},
  %{1673 => 1673},
  %{1667 => 1667},
  %{1648 => 1648},
  %{1616 => 1616},
  %{1579 => 1579},
  %{1572 => 1572},
  %{1548 => 1548},
  %{1522 => 1522},
  %{1501 => 1501},
  %{1475 => 1475},
  %{1473 => 1473},
  %{1471 => 2942},
  %{1465 => 1465},
  %{1459 => 1459},
  %{1453 => 1453},
  %{1451 => 1451},
  %{1427 => 1427},
  %{1425 => 1425},
  %{1424 => 1424},
  %{1413 => 1413},
  %{1412 => 1412},
  %{1411 => 1411},
  %{1407 => 1407},
  %{1401 => 1401},
  %{1384 => 1384},
  %{1381 => 1381},
  %{1380 => 1380},
  %{1372 => 1372},
  %{1365 => 1365},
  %{1349 => 2698},
  %{1340 => 1340},
  %{1330 => 2660},
  %{1320 => 1320},
  %{1313 => 1313},
  %{1306 => 1306},
  %{1299 => 2598},
  %{1296 => 1296},
  %{1290 => 1290},
  %{1283 => 1283},
  %{1282 => 1282},
  %{1270 => 1270},
  %{...},
  ...
]
```

<!-- livebook:{"output":true} -->

```
[
  %{1934 => 1934},
  %{1881 => 1881},
  %{1836 => 1836},
  %{1804 => 1804},
  %{1763 => 1763},
  %{1735 => 1735},
  %{1704 => 1704},
  %{1699 => 1699},
  %{1673 => 1673},
  %{1667 => 1667},
  %{1648 => 1648},
  %{1616 => 1616},
  %{1579 => 1579},
  %{1572 => 1572},
  %{1548 => 1548},
  %{1522 => 1522},
  %{1501 => 1501},
  %{1475 => 1475},
  %{1473 => 1473},
  %{1471 => 2942},
  %{1465 => 1465},
  %{1459 => 1459},
  %{1453 => 1453},
  %{1451 => 1451},
  %{1427 => 1427},
  %{1425 => 1425},
  %{1424 => 1424},
  %{1413 => 1413},
  %{1412 => 1412},
  %{1411 => 1411},
  %{1407 => 1407},
  %{1401 => 1401},
  %{1384 => 1384},
  %{1381 => 1381},
  %{1380 => 1380},
  %{1372 => 1372},
  %{1365 => 1365},
  %{1349 => 2698},
  %{1340 => 1340},
  %{1330 => 2660},
  %{1320 => 1320},
  %{1313 => 1313},
  %{1306 => 1306},
  %{1299 => 2598},
  %{1296 => 1296},
  %{1290 => 1290},
  %{1283 => 1283},
  %{1282 => 1282},
  %{1270 => 1270},
  %{...},
  ...
]
```

## The Treachery of Whales (Puzzle 2/2)

| Previous                     | Next |
| ---------------------------- | ---: |
| [Day 6](../Day6/Day6.livemd) | --   |

[Return to puzzles index](../../AdventOfCode.livemd)
